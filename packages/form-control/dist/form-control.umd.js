(function(i,r){typeof exports=="object"&&typeof module!="undefined"?r(exports):typeof define=="function"&&define.amd?define(["exports"],r):(i=typeof globalThis!="undefined"?globalThis:i||self,r(i.FormControl={}))})(this,function(i){"use strict";var r={props:{dropShadow:[Boolean,String],dropShadowableClassPrefix:{type:String,default:"drop-shadow"},shadow:[Boolean,String],shadowableClassPrefix:{type:String,default:"shadow"}},computed:{shadowableClass(){const t=this.dropShadow===!0?"":this.dropShadow&&`-${this.dropShadow}`,e=this.shadow===!0?"":this.shadow&&`-${this.shadow}`;return{[`${this.dropShadowableClassPrefix}${t}`]:!!this.dropShadow,[`${this.shadowableClassPrefix}${e}`]:!!this.shadow}}}};function a(t,e,s="-"){const n=(e||t).toString().replace(new RegExp(`^${a}${s}?`),"");return[t,n].filter(l=>!!l).join(s)}function u(t){return!Array.isArray(t)&&typeof t=="object"}var d={inheritAttrs:!1,mixins:[r],props:{activity:{type:Boolean,default:!1},bindEvents:{type:Array,default(){return["focus","blur","change","click","keypress","keyup","keydown","progress","paste"]}},componentName:{type:String,default(){return this.$options.name}},custom:{type:Boolean,default:!1},defaultControlClass:{type:String,default:"form-control"},defaultValue:{default:null},error:[Boolean,String],errors:{type:Object,default(){return{}}},feedback:[String,Array],group:{type:Boolean,default:!0},helpText:[Number,String],hideLabel:Boolean,indicator:{type:String,default:"spinner"},indicatorSize:String,inline:Boolean,invalid:Boolean,legacy:Boolean,label:[Number,String],labelClass:[Object,String],pill:Boolean,plaintext:Boolean,size:{type:String,default:"md",validate:t=>["sm","md","lg"].indexOf(t)!==-1},spacing:String,valid:Boolean,value:{default:null}},directives:{bindEvents:{bind(t,e,s){function n(){return s.context.isEmpty=!t.value,t.value&&(s.context.currentValue=t.value),l(),n}function l(){t.selectedIndex>=-1?t.setAttribute("data-selected-index",t.selectedIndex):t.removeAttribute("data-selected-index")}if(t.addEventListener("focus",()=>{s.context.hasFocus=!0}),t.addEventListener("blur",()=>{s.context.hasFocus=!1}),t.addEventListener(t.tagName==="SELECT"?"change":"input",n()),s.context.hasChanged=!!t.value,s.context.bindEvents.forEach(o=>{t.addEventListener(o,h=>{s.context.$emit(o,h)})}),t.tagName==="SELECT"){const o=t.querySelector('[value=""]');o&&o.value===t.value&&(s.context.defaultEmpty=!0)}}}},methods:{blur(){this.getInputField()&&this.getInputField().blur()},focus(){this.getInputField()&&this.getInputField().focus()},getInputField(){return this.$el.querySelector(".form-control, input, select, textarea")},getFieldErrors(){let t=this.error||this.errors;return u(this.errors)&&(t=this.errors[this.$attrs.name||this.$attrs.id]),!t||Array.isArray(t)||u(t)?t:[t]},onInput(t){this.$emit("input",t.target.value),this.$emit("update:value",t.target.value)}},computed:{id(){return this.$attrs.id||Math.random().toString(36).substring(2,15)},controlAttributes(){return Object.keys(this.$attrs).concat([["id",this.id],["class",this.controlClasses]]).reduce((t,e)=>(Array.isArray(e)?t[e[0]]=e[1]:t[e]=this[e]||this.$attrs[e],t),{})},controlClass(){return this.custom?this.customControlClass:this.defaultControlClass},controlSizeClass(){return a(this.size,this.controlClass)},customControlClass(){return"custom-control"},formGroupClasses(){return{[this.componentName]:!!this.componentName,[a(this.size,this.componentName)]:!!this.size,[a(this.componentName,"custom")]:this.custom,[a(this.size,a(this.componentName,"custom"))]:this.custom&&this.size,"default-empty":this.defaultEmpty,"form-group":this.group,"has-activity":this.activity,"has-changed":this.hasChanged,"has-focus":this.hasFocus,"is-empty":this.isEmpty,"is-invalid":!!(this.invalid||this.invalidFeedback),"is-valid":!!(this.valid||this.validFeedback)}},controlClasses(){return Object.assign({[this.controlClass]:!!this.controlClass,[this.controlSizeClass]:!!this.controlSizeClass,"form-control-icon":!!this.$slots.icon,"is-valid":!!(this.valid||this.validFeedback),"is-invalid":!!(this.invalid||this.invalidFeedback),[this.pillClasses]:this.pill,[this.plaintextClass]:this.plaintext,[this.spacing]:!!this.spacing},this.shadowableClass)},hasDefaultSlot(){return!!this.$slots.default},invalidFeedback(){if(this.error)return this.error;const t=this.getFieldErrors();return Array.isArray(t)?t.filter(e=>e&&typeof e=="string").join("<br>"):t},pillClasses(){return"rounded rounded-pill"},plaintextClass(){return"form-control-plaintext"},validFeedback(){return Array.isArray(this.feedback)?this.feedback.join("<br>"):this.feedback}},watch:{value(t){this.currentValue=t},currentValue(){this.hasChanged=!0}},mounted(){this.value===null&&this.defaultValue!==null&&this.$emit("input",this.defaultValue)},data(){return{currentValue:this.value||this.defaultValue,defaultEmpty:!1,hasChanged:!1,hasFocus:!1,isEmpty:!1}}};i.FormControl=d,Object.defineProperty(i,"__esModule",{value:!0}),i[Symbol.toStringTag]="Module"});
